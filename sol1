Ques . 1)

================================================================
variable name                address                 content
================================================================
a                           0xFF4000                   12
*b                          0xFF4004                   0xFF4000
**c                         0xFF4012                   0xFF4004

Our base address is 0xFF4000 so if create first varible name "a" then address location assigned to variable is 0xFF4000 because interger 
variable take 4 byte,
if we define pointer "*b" to int then next location would be 0xFF4000+4(integer size) = 0xFF4004 and the content will be address of variable 
a 
**c it's double pointer it store the address of pointer variable,so if the pointer take 8 bytes then next address will be 
0xFF4004+8 = 0xFF4012 if we consider memory is efficently stored

Ques .2) There will be no effect on value if print a,*b,**c, then value will be same

================================================================
variable name                address                 content
================================================================
c                           0xFF4012                   0xFF4004
*c                          0xFF4004                   0xFF4000
**c                         0xFF4012                   12

Ques .3) 
#include<stdio.h>
int main(){
  int arr[100];
  for(int i=0;i<100;i++){
    arr[i]=-1;
  }
return 0;
}
Quest .4)

int a=12;
	&a=5;
Left side of equal assignment should be any operand or variable that could be assigned but but we can't perform "=" at address
this will show error : "lvalue required as left operand of assignment"
Quest. 5)

int a=12;
	int *a_ptr;
	*a_ptr=a;
  
  This will give Segmentation Fault error.Since *a_ptr is a pointer type and hold address so assigning directly any value as lvalue is not valid 
  but we can do this in another way like this
  
  int a=12;
  int *a_ptr=&a;
  then assign value
  *a_ptr=10;
  
  this is fine because a_ptr point to a address and at that address the we can use *a_ptr as lvalue 
  
